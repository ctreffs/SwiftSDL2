name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  linux-test-build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        swift: ["latest"]
    container:
      image: swift:${{ matrix.swift }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: APT cache
        uses: actions/cache@v3.3.1
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt

      - name: Restore cached SPM dependencies
        uses: actions/cache@v3.3.1
        with:
          path: .build
          key: swiftpm-${{ runner.os }}-${{ inputs.swift-version }}-${{ hashFiles('Package.swift') }}
          restore-keys: |
            swiftpm-${{ runner.os }}-${{ inputs.swift-version }}-
            swiftpm-${{ runner.os }}-

      - name: Install dependencies
        run: |
          apt update
          apt install -y libsdl2-dev

      - name: Build & Test
        run: swift test -c release
        
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4.4.3
        with:
          name: build-artifacts-linux-${{ matrix.swift }}-${{ github.run_id }}
          path: |
            .build/*.yaml
            .build/*.xml
            .build/*.json
            .build/*.txt
            .build/**/*.json
            .build/**/*.txt
            .build/**/*.a
            .build/**/*.dSYM
            .build/**/*.gdb
            .build/**/*.xctest
            .build/**/*.bundle
            .build/**/MetalApp
            .build/**/Minimal
          if-no-files-found: warn
          include-hidden-files: true